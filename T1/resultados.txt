Sistema operativo utilizado
Linux debian11mate 5.10.0-21-amd64 #1 SMP Debian 5.10.162-1 (2023-01-21) x86_64 GNU/Linux
==== run-san ====
gcc -g -DSAN=1 -fsanitize=address -fsanitize=undefined -Wall -Werror -std=c18  test-integral.c integral.c -lm -lpthread -o integral.bin-san
./integral.bin-san
Calculando secuencialmente 2 veces
integral en [-0.200000,0.600000] con 20000 intervalos= 0.214813
integral= 0.214813, valor esperado= 0.214813, error= 0.000000, tiempo= 2610
integral en [-0.200000,0.600000] con 20000 intervalos= 0.214813
integral= 0.214813, valor esperado= 0.214813, error= 0.000000, tiempo= 2617
Calculando en paralelo hasta 1 veces
integral en [0.400000,0.600000] con 5000 intervalos= 0.093288
integral en [0.000000,0.200000] con 5000 intervalos= 0.042758
integral en [0.200000,0.400000] con 5000 intervalos= 0.073853
integral en [-0.200000,0.000000] con 5000 intervalos= 0.004913
integral par= 0.214813, valor esperado= 0.214813, error= 0.000000, tiempo= 2031, speedup= 1.288528
Felicitaciones: Su tarea funciona.
==== run-g ====
gcc -g -Wall -Werror -std=c18  test-integral.c integral.c -lm -lpthread -o integral.bin-g
./integral.bin-g
Calculando secuencialmente 2 veces
integral en [-0.200000,0.600000] con 20000 intervalos= 0.214813
integral= 0.214813, valor esperado= 0.214813, error= 0.000000, tiempo= 2548
integral en [-0.200000,0.600000] con 20000 intervalos= 0.214813
integral= 0.214813, valor esperado= 0.214813, error= 0.000000, tiempo= 2565
Calculando en paralelo hasta 1 veces
integral en [-0.200000,0.000000] con 5000 intervalos= 0.004913
integral en [0.200000,0.400000] con 5000 intervalos= 0.073853
integral en [0.400000,0.600000] con 5000 intervalos= 0.093288
integral en [0.000000,0.200000] con 5000 intervalos= 0.042758
integral par= 0.214813, valor esperado= 0.214813, error= 0.000000, tiempo= 1263, speedup= 2.030879
Felicitaciones: Su tarea funciona.
==== run ====
gcc -O -DOPT=1 -Wall -Werror -std=c18  test-integral.c integral.c -lm -lpthread -o integral.bin
Calculando secuencialmente 2 veces
integral en [-0.200000,0.600000] con 20000 intervalos= 0.214813
integral= 0.214813, valor esperado= 0.214813, error= 0.000000, tiempo= 1406
integral en [-0.200000,0.600000] con 20000 intervalos= 0.214813
integral= 0.214813, valor esperado= 0.214813, error= 0.000000, tiempo= 1444
Calculando en paralelo hasta 4 veces
integral en [0.400000,0.600000] con 5000 intervalos= 0.093288
integral en [-0.200000,0.000000] con 5000 intervalos= 0.004913
integral en [0.000000,0.200000] con 5000 intervalos= 0.042758
integral en [0.200000,0.400000] con 5000 intervalos= 0.073853
integral par= 0.214813, valor esperado= 0.214813, error= 0.000000, tiempo= 701, speedup= 2.059914
Felicitaciones: el speedup es mejor que 1.5x.  Su tarea funciona.
